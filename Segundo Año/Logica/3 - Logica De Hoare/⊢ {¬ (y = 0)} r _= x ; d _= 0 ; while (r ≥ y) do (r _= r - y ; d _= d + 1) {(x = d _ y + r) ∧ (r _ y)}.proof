/* Proof for ⊢ {¬ (y = 0)} r := x ; d := 0 ; while (r ≥ y) do (r := r - y ; d := d + 1) {(x = d * y + r) ∧ (r < y)} */
new Sequencing(new Sequencing(new ConsequenceNoPost(new Z3Rule(new Sequent([new Not(new Equal(new TermVar("y"), new TermInt(0)))], [new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermInt(0), new TermVar("y")), new TermVar("x")))])), new Assignment(new HoareTriple(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermInt(0), new TermVar("y")), new TermVar("x"))), new CmdAssign(new TermVar("r"), new TermVar("x")), new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermInt(0), new TermVar("y")), new TermVar("r"))))), new HoareTriple(new Not(new Equal(new TermVar("y"), new TermInt(0))), new CmdAssign(new TermVar("r"), new TermVar("x")), new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermInt(0), new TermVar("y")), new TermVar("r"))))), new Assignment(new HoareTriple(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermInt(0), new TermVar("y")), new TermVar("r"))), new CmdAssign(new TermVar("d"), new TermInt(0)), new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))))), new HoareTriple(new Not(new Equal(new TermVar("y"), new TermInt(0))), new CmdSeq(new CmdAssign(new TermVar("r"), new TermVar("x")), new CmdAssign(new TermVar("d"), new TermInt(0))), new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))))), new ConsequenceNoPre(new Loop(new Sequencing(new ConsequenceNoPost(new Z3Rule(new Sequent([new And(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))), new GeqThan(new TermVar("r"), new TermVar("y")))], [new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new AddTerms(new TermVar("d"), new TermInt(1)), new TermVar("y")), new SubtractTerms(new TermVar("r"), new TermVar("y"))))])), new Assignment(new HoareTriple(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new AddTerms(new TermVar("d"), new TermInt(1)), new TermVar("y")), new SubtractTerms(new TermVar("r"), new TermVar("y")))), new CmdAssign(new TermVar("r"), new SubtractTerms(new TermVar("r"), new TermVar("y"))), new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new AddTerms(new TermVar("d"), new TermInt(1)), new TermVar("y")), new TermVar("r"))))), new HoareTriple(new And(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))), new GeqThan(new TermVar("r"), new TermVar("y"))), new CmdAssign(new TermVar("r"), new SubtractTerms(new TermVar("r"), new TermVar("y"))), new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new AddTerms(new TermVar("d"), new TermInt(1)), new TermVar("y")), new TermVar("r"))))), new Assignment(new HoareTriple(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new AddTerms(new TermVar("d"), new TermInt(1)), new TermVar("y")), new TermVar("r"))), new CmdAssign(new TermVar("d"), new AddTerms(new TermVar("d"), new TermInt(1))), new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))))), new HoareTriple(new And(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))), new GeqThan(new TermVar("r"), new TermVar("y"))), new CmdSeq(new CmdAssign(new TermVar("r"), new SubtractTerms(new TermVar("r"), new TermVar("y"))), new CmdAssign(new TermVar("d"), new AddTerms(new TermVar("d"), new TermInt(1)))), new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))))), new HoareTriple(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))), new CmdWhile(new GeqThan(new TermVar("r"), new TermVar("y")), new CmdSeq(new CmdAssign(new TermVar("r"), new SubtractTerms(new TermVar("r"), new TermVar("y"))), new CmdAssign(new TermVar("d"), new AddTerms(new TermVar("d"), new TermInt(1))))), new And(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))), new Not(new GeqThan(new TermVar("r"), new TermVar("y")))))), new Z3Rule(new Sequent([new And(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))), new Not(new GeqThan(new TermVar("r"), new TermVar("y"))))], [new And(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))), new LessThan(new TermVar("r"), new TermVar("y")))])), new HoareTriple(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))), new CmdWhile(new GeqThan(new TermVar("r"), new TermVar("y")), new CmdSeq(new CmdAssign(new TermVar("r"), new SubtractTerms(new TermVar("r"), new TermVar("y"))), new CmdAssign(new TermVar("d"), new AddTerms(new TermVar("d"), new TermInt(1))))), new And(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))), new LessThan(new TermVar("r"), new TermVar("y"))))), new HoareTriple(new Not(new Equal(new TermVar("y"), new TermInt(0))), new CmdSeq(new CmdSeq(new CmdAssign(new TermVar("r"), new TermVar("x")), new CmdAssign(new TermVar("d"), new TermInt(0))), new CmdWhile(new GeqThan(new TermVar("r"), new TermVar("y")), new CmdSeq(new CmdAssign(new TermVar("r"), new SubtractTerms(new TermVar("r"), new TermVar("y"))), new CmdAssign(new TermVar("d"), new AddTerms(new TermVar("d"), new TermInt(1)))))), new And(new Equal(new TermVar("x"), new AddTerms(new MultiplyTerms(new TermVar("d"), new TermVar("y")), new TermVar("r"))), new LessThan(new TermVar("r"), new TermVar("y")))))
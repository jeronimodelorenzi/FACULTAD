/* Proof for ⊢ {(y = y0) ∧ (y ≥ 0)} z := 0 ; while (¬ (y = 0)) do (z := z + x ; y := y - 1) {z = x * y0} */
new Sequencing(new ConsequenceNoPost(new Z3Rule(new Sequent([new And(new Equal(new TermVar("y"), new TermVar("y0")), new GeqThan(new TermVar("y"), new TermInt(0)))], [new Equal(new TermInt(0), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y"))))])), new Assignment(new HoareTriple(new Equal(new TermInt(0), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))), new CmdAssign(new TermVar("z"), new TermInt(0)), new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))))), new HoareTriple(new And(new Equal(new TermVar("y"), new TermVar("y0")), new GeqThan(new TermVar("y"), new TermInt(0))), new CmdAssign(new TermVar("z"), new TermInt(0)), new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))))), new ConsequenceNoPre(new Loop(new Sequencing(new ConsequenceNoPost(new Z3Rule(new Sequent([new And(new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))), new Not(new Equal(new TermVar("y"), new TermInt(0))))], [new Equal(new AddTerms(new TermVar("z"), new TermVar("x")), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new SubtractTerms(new TermVar("y"), new TermInt(1)))))])), new Assignment(new HoareTriple(new Equal(new AddTerms(new TermVar("z"), new TermVar("x")), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new SubtractTerms(new TermVar("y"), new TermInt(1))))), new CmdAssign(new TermVar("z"), new AddTerms(new TermVar("z"), new TermVar("x"))), new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new SubtractTerms(new TermVar("y"), new TermInt(1))))))), new HoareTriple(new And(new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))), new Not(new Equal(new TermVar("y"), new TermInt(0)))), new CmdAssign(new TermVar("z"), new AddTerms(new TermVar("z"), new TermVar("x"))), new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new SubtractTerms(new TermVar("y"), new TermInt(1))))))), new Assignment(new HoareTriple(new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new SubtractTerms(new TermVar("y"), new TermInt(1))))), new CmdAssign(new TermVar("y"), new SubtractTerms(new TermVar("y"), new TermInt(1))), new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))))), new HoareTriple(new And(new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))), new Not(new Equal(new TermVar("y"), new TermInt(0)))), new CmdSeq(new CmdAssign(new TermVar("z"), new AddTerms(new TermVar("z"), new TermVar("x"))), new CmdAssign(new TermVar("y"), new SubtractTerms(new TermVar("y"), new TermInt(1)))), new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))))), new HoareTriple(new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))), new CmdWhile(new Not(new Equal(new TermVar("y"), new TermInt(0))), new CmdSeq(new CmdAssign(new TermVar("z"), new AddTerms(new TermVar("z"), new TermVar("x"))), new CmdAssign(new TermVar("y"), new SubtractTerms(new TermVar("y"), new TermInt(1))))), new And(new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))), new Not(new Not(new Equal(new TermVar("y"), new TermInt(0))))))), new Z3Rule(new Sequent([new And(new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))), new Not(new Not(new Equal(new TermVar("y"), new TermInt(0)))))], [new Equal(new TermVar("z"), new MultiplyTerms(new TermVar("x"), new TermVar("y0")))])), new HoareTriple(new Equal(new TermVar("z"), new SubtractTerms(new MultiplyTerms(new TermVar("x"), new TermVar("y0")), new MultiplyTerms(new TermVar("x"), new TermVar("y")))), new CmdWhile(new Not(new Equal(new TermVar("y"), new TermInt(0))), new CmdSeq(new CmdAssign(new TermVar("z"), new AddTerms(new TermVar("z"), new TermVar("x"))), new CmdAssign(new TermVar("y"), new SubtractTerms(new TermVar("y"), new TermInt(1))))), new Equal(new TermVar("z"), new MultiplyTerms(new TermVar("x"), new TermVar("y0"))))), new HoareTriple(new And(new Equal(new TermVar("y"), new TermVar("y0")), new GeqThan(new TermVar("y"), new TermInt(0))), new CmdSeq(new CmdAssign(new TermVar("z"), new TermInt(0)), new CmdWhile(new Not(new Equal(new TermVar("y"), new TermInt(0))), new CmdSeq(new CmdAssign(new TermVar("z"), new AddTerms(new TermVar("z"), new TermVar("x"))), new CmdAssign(new TermVar("y"), new SubtractTerms(new TermVar("y"), new TermInt(1)))))), new Equal(new TermVar("z"), new MultiplyTerms(new TermVar("x"), new TermVar("y0")))))